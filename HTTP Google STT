class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        __init__()    #initialization code
        pass

    def onUnload(self):
        print('clean')    #clean-up code
        pass

    def onInput_onStart(self, p):
        self.logger.info(p)
        filepath = p

        import os
        import json
        import requests
        import urllib

        try:
            timeout = int(self.getParameter("Timeout"))

            q = {"output": "json", "lang": "ja-JP", "key": self.getParameter("GOOGLE_API_KEY")}

            url = "http://www.google.com/speech-api/v2/recognize?%s" % (urllib.urlencode(q))

            self.logger.info(url)

            headers = {"Content-Type": "audio/l16; rate=16000"}
            data = open(filepath, "rb").read()

            response = requests.post(
                url,
                headers=headers,
                data=data,
                timeout=timeout
            )

            jsonunits = response.text.split(os.linesep)
            res = ""

            for unit in jsonunits:
                if not unit:
                    continue
                obj = json.loads(unit)
                alternatives = obj["result"]

                if len(alternatives) > 0:
                    breakflag = False
                    for obj in alternatives:
                        results = obj["alternative"]
                        for result in results:
                            res = result["transcript"]
                            breakflag = True
                            break

                        if breakflag:
                            break

            text = res.encode("UTF-8")
            self.logger.info("result: %s" % text)

            self.onStopped(text)

        except requests.exceptions.RequestException, message:
            self.logger.warn("Failed to open: message=%s" % (message))
            self.onFailed(message)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box
